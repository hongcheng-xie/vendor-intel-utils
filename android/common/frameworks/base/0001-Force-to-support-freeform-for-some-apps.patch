From f5c9a23e7fc059e5b9176470beb3b72b3336d794 Mon Sep 17 00:00:00 2001
From: Hongcheng Xie <hongcheng.xie@intel.com>
Date: Thu, 21 May 2020 14:42:20 +0800
Subject: [PATCH] Force to support freeform for some apps

Currently host multi window only support freeform stack, but some apps
activity attribue don't support freeform by default. Force to support
freeform in host multi window mode.

Change-Id: I632ded19de77672efbed283ddf5702ecd533231d
Tracked-On: OAM-91115
Signed-off-by: Hongcheng Xie <hongcheng.xie@intel.com>
---
 .../com/android/server/am/ActivityDisplay.java   | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/services/core/java/com/android/server/am/ActivityDisplay.java b/services/core/java/com/android/server/am/ActivityDisplay.java
index bfafec074c9..3228c5d920d 100644
--- a/services/core/java/com/android/server/am/ActivityDisplay.java
+++ b/services/core/java/com/android/server/am/ActivityDisplay.java
@@ -43,6 +43,7 @@ import android.app.ActivityManagerInternal;
 import android.app.ActivityOptions;
 import android.app.WindowConfiguration;
 import android.graphics.Point;
+import android.os.SystemProperties;
 import android.util.IntArray;
 import android.util.Slog;
 import android.util.proto.ProtoOutputStream;
@@ -546,6 +547,21 @@ class ActivityDisplay extends ConfigurationContainer<ActivityStack>
                 supportsFreeform = r.supportsFreeform();
                 supportsPip = r.supportsPictureInPicture();
             }
+            if (SystemProperties.getBoolean("ro.sys.force.freeform", false)) {
+                Slog.i(TAG, "Force to support freeform for: r="+ r
+                        + " it's windowingMode=" + windowingMode
+                        + ", resizeable=" + supportsMultiWindow
+                        + ", supportsFreeform=" + supportsFreeform);
+                supportsMultiWindow = true;
+                supportsFreeform = true;
+                int launchWinMode  = (options != null)
+                    ? options.getLaunchWindowingMode() : WINDOWING_MODE_UNDEFINED;
+                if (launchWinMode != WINDOWING_MODE_UNDEFINED) {
+                    windowingMode = launchWinMode;
+                } else {
+                    windowingMode = WINDOWING_MODE_FREEFORM;
+                }
+            }
         }
 
         final boolean inSplitScreenMode = hasSplitScreenPrimaryStack();
-- 
2.17.1

